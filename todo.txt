Main:
- Add functionality around HasMoved to be at piece level, so that checking for castling (king / rook hasn't moved) is possible
- Add check for HasMoved on king/rook and some function to make sure castling is possible, aka not moving through check, and isLineClear between start / destination for each piece
- Remake the translator in an internal translation package
- Refactor the generation package to use the new structure changes
- Refactor the random game play to use all the new stuff
- Add coverage to board_test.go for black moves as well as white
- Add coverage to board_test.go for turn swapping on the board to ensure that the game is valid and the history of the game is built

Extra:
- Maybe add validation to make sure you can't use standard moving notation to capture a piece (needs to have 'x' in the notation to work)
- Externalise the config by adding it to a terraform file? (Learn terraform)

Castling Notes:
    - if king is attempting to move 2 spaces, getSteps for king direction, and build up line in direction until a rook is hit
    - if no rook is hit then invalid move, there shouldn't be anything obstructing the line between the king and rook
    - once the line is retrieved, iterate over each square between king and destination square (includingLast) and check if any of the opponents pieces can move to that square
    - this will require recursive calls to b.IsValidMove() but with different moves that shouldn't ever be cyclic


